#!/usr/bin/env bash

set -e

main() {
  use-sudo
  # install-brew-packages
  source "$DOTFILES_PATH/configuration/scripts/node"
  source "$DOTFILES_PATH/configuration/scripts/ruby"
  # TODO: do not install if installed
  install-prelude
  install-oh-my-zsh
  #source "$DOTFILES_PATH/configuration/scripts/osx"
  # source "$DOTFILES_PATH/configuration/scripts/install-private-apps"
  # if(first-run); then
  #   preferences-manager restore || true
  # fi

  # redis-launch-agent
  # build-locate-database
  # rehash
  # backup-weird-bundle
  # install-shellcheck
  # init-ranger
  # remove-karabiner-startup
  # set-launchctl-env-vars
}

use-sudo() {
  sudo -v
  while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
}

install-brew-packages() {
  brew bundle --file="$DOTFILES_PATH/configuration/brew/.Brewfile"
}

redis-launch-agent() {
  ln -sfv /opt/boxen/homebrew/opt/redis/*.plist ~/Library/LaunchAgents
}

install-prelude() {
  if [ -e "$HOME/.emacs.d/.git" ]; then
    return
  fi

  curl -L https://git.io/epre | sh
}

install-oh-my-zsh() {
  if [ -e "$HOME/.emacs.d/.git" ]; then
    return
  fi

  sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
}

rehash() {
  rm /opt/boxen/nodenv/shims/.nodenv-shim > /dev/null 2>&1 || true
  nodenv rehash
  rm /opt/boxen/nodenv/shims/.rbenv-shim > /dev/null 2>&1 || true
  rbenv rehash
}

init-ranger() {
  ranger --copy-config=all > /dev/null 2>&1
}

build-locate-database() {
  # To make locate work
  sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.locate.plist
}

backup-weird-bundle() {
  mv -f /usr/local/bin/bundle{,.backup} | true
}

install-shellcheck() {
  if ! which shellcheck > /dev/null 2>&1; then
    cabal update
    cabal install shellcheck
  fi
}

remove-karabiner-startup() {
  karabiner_launch="/Library/LaunchDaemons/org.pqrs.Karabiner.load.plist"
  sudo rm "$karabiner_launch" | true
}

first-run() {
  if [ -e "$HOME/.configuration-installed" ]; then
    return 1
  else
    echo "this is meant to verify configuration installed(from after-boxen)" > "$HOME/.configuration-installed"
    return 0
  fi
}

set-launchctl-env-vars() {
  source "$DOTFILES_PATH/configuration/env/public.sh"
  source "$DOTFILES_PATH/configuration/env/private.sh"
  launchctl setenv EMACS_PATH  "$EMACS_PATH"
  launchctl setenv EMACS_CLIENT_PATH  "$EMACS_CLIENT_PATH"
  launchctl setenv POSTGRES_APP_BIN_PATH  "$POSTGRES_APP_BIN_PATH"
  launchctl setenv POSTGRES_DATADIR_RELATIVE_PATH  "$POSTGRES_DATADIR_RELATIVE_PATH"
}

main "$@"

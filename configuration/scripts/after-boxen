#!/usr/bin/env bash

set -e

main() {

  source "$DOTFILES_PATH/configuration/scripts/after-boxen.d/install-private-apps"
  if(first-run); then
    preferences-manager restore || true
  fi
  source "$DOTFILES_PATH/configuration/scripts/after-boxen.d/osx"

  redis-launch-agent
  build-locate-database
  rehash
  backup-weird-bundle
  install-shellcheck
  init-ranger
  # remove-karabiner-startup
}

redis-launch-agent() {
  ln -sfv /opt/boxen/homebrew/opt/redis/*.plist ~/Library/LaunchAgents
}

rehash() {
  rm /opt/boxen/nodenv/shims/.nodenv-shim > /dev/null 2>&1 || true
  nodenv rehash
  rm /opt/boxen/nodenv/shims/.rbenv-shim > /dev/null 2>&1 || true
  rbenv rehash
}

init-ranger() {
  ranger --copy-config=all > /dev/null 2>&1
}

build-locate-database() {
  # To make locate work
  sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.locate.plist
}

backup-weird-bundle() {
  mv -f /usr/local/bin/bundle{,.backup} | true
}

install-shellcheck() {
  if ! which shellcheck > /dev/null 2>&1; then
    cabal update
    cabal install shellcheck
  fi
}

remove-karabiner-startup() {
  karabiner_launch="/Library/LaunchDaemons/org.pqrs.Karabiner.load.plist"
  sudo rm "$karabiner_launch" | true
}

first-run() {
  if [ -e "$HOME/.configuration-installed" ]; then
    return 1
  else
    echo "this is meant to verify configuration installed(from after-boxen)" > "$HOME/.configuration-installed"
    return 0
  fi
}

main "$@"

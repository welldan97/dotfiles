#!/usr/bin/env ruby

require 'watir-webdriver'
require 'highline/import'
require 'grit'
require 'yaml'
require 'ostruct'
require 'terminal-notifier'

BACKUP_FOLDER = "#{Dir.home}/support/backup/netvibes"

SIGNIN_SLEEP_TIME = 3
PAGE_LOADING_SLEEP_TIME = 10

class NetvibesBrowser < Watir::Browser
  def save_netvibes_page dashboard, tab
    browser.goto "http://www.netvibes.com/privatepage/#{dashboard}##{tab}"
    browser.refresh
    browser.send_keys :end
    sleep PAGE_LOADING_SLEEP_TIME
    contents = browser.html
    directory_name = "#{BACKUP_FOLDER}/#{dashboard}"
    Dir.mkdir(directory_name) unless File.exists?(directory_name)
    File.open("#{directory_name}/#{tab}.html", 'w') { |f| f.write(contents) }
  end

  def get_netvibes_pages
    pages = {}

    n = 1
    loop do
      browser.goto("http://www.netvibes.com/privatepage/#{n}")
      break unless browser.url.match /privatepage\/#{n}/
      pages[n] = browser.spans(class: 'innerTab').map { |e| e.text }

      n +=1
    end

    pages
  end
end

config = OpenStruct.new YAML.load_file("#{Dir.home}/.config.yml")

email = config.email
password = config.netvibes_password

browser = NetvibesBrowser.new :chrome
browser.goto "http://www.netvibes.com/signin?from=home"

browser.text_field(name: 'email').set email
browser.text_field(name: 'password').set password
browser.button(value: 'Sign in').click

sleep SIGNIN_SLEEP_TIME
if browser.url.match(/signin/)
  error_text = "Netvibes sign in error:#{browser.span(id: 'signinErrorMessage').text}"
  TerminalNotifier.notify error_text
  abort error_text
end

puts "getting pages urls"
pages = browser.get_netvibes_pages

if pages.values.all? &:empty?
  error_text = "Netvibes backup error"
  TerminalNotifier.notify error_text
  abort error_text
end

puts "saving pages"
pages.each do |dashboard, p|
  p.each do |tab|
    puts "#{dashboard}/#{tab}"
    browser.save_netvibes_page dashboard, tab
  end
end
browser.close

puts "Saving to repo"
Dir.chdir(BACKUP_FOLDER) do
  repo = Grit::Repo.new('.')
  repo.add('*')
  repo.commit_index(Time.now)
end

TerminalNotifier.notify 'Netvibes backed up'

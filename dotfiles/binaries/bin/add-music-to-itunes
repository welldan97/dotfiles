#!/usr/bin/env ruby
require 'project_config'

setup_project_config :dotfiles

module ItunesPlaylistImporter
  MUSIC_PATH = ProjectConfig.music_path
  def self.call
    music_dirs.select { |dir| has_music_files? dir }
      .map { |dir| create_m3u dir }
      .each { |playlist| open_with_default_opener playlist}
  end

  def self.clean
    playlists.each { |playlist| File.delete playlist }
  end

  private

  def self.playlists
    Dir["#{MUSIC_PATH}/**/*.m3u"]
  end

  def self.music_dirs
    Dir["#{MUSIC_PATH}/*/*"].reject { |d| /iTunes\/.*\Z/ =~ d }
  end

  def self.has_music_files? dir
    fetch_music_files(dir).any?
  end

  def self.create_m3u dir
    contents = fetch_music_files(dir).each { |f|  f["#{dir}/"] = ''}.join "\n"

    genre = File.basename(File.dirname dir)

    "#{dir}/#{emojify genre} #{File.basename dir}.m3u".tap do |file_name|
      File.write file_name, contents
    end
  end

  def self.open_with_default_opener file
    `open "#{file}"`
    sleep 3
  end

  def self.emojify name
    @names ||= {}
    @names[name] ||= 128051 + @names.length
    [@names[name]].pack('U*')
  end

  def self.fetch_music_files dir
    Dir["#{dir}/**/*"].select { |f| /(.mp3|.m4a)\Z/ =~ f }
  end
end

if ARGV[0] == '--clean'
  ItunesPlaylistImporter.clean
else
  ItunesPlaylistImporter.call
end
